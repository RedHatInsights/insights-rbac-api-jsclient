/**
 * Role Based Access Control
 * The API for Role Based Access Control.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Access from './Access';
import RoleOut from './RoleOut';

/**
 * The RoleWithAccess model module.
 * @module model/RoleWithAccess
 * @version 1.0.0
 */
class RoleWithAccess {
    /**
     * Constructs a new <code>RoleWithAccess</code>.
     * @alias module:model/RoleWithAccess
     * @extends module:model/RoleOut
     * @implements module:model/RoleOut
     * @param name {} 
     * @param uuid {} 
     * @param access {} 
     */
    constructor(name, uuid, access) { 
        RoleOut.initialize(this, name, uuid);
        RoleWithAccess.initialize(this, name, uuid, access);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, uuid, access) { 
        obj['access'] = access;
    }

    /**
     * Constructs a <code>RoleWithAccess</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RoleWithAccess} obj Optional instance to populate.
     * @return {module:model/RoleWithAccess} The populated <code>RoleWithAccess</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RoleWithAccess();
            RoleOut.constructFromObject(data, obj);
            RoleOut.constructFromObject(data, obj);

            if (data.hasOwnProperty('access')) {
                obj['access'] = ApiClient.convertToType(data['access'], [Access]);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:model/Access>} access
 */
RoleWithAccess.prototype['access'] = undefined;


// Implement RoleOut interface:
/**
 * @member {} name
 */
RoleOut.prototype['name'] = undefined;
/**
 * @member {} description
 */
RoleOut.prototype['description'] = undefined;
/**
 * @member {} uuid
 */
RoleOut.prototype['uuid'] = undefined;




export default RoleWithAccess;

