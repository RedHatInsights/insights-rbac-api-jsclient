/**
 * Role Based Access Control
 * The API for Role Based Access Control.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResourceDefinitionFilter model module.
 * @module model/ResourceDefinitionFilter
 * @version 1.0.0
 */
class ResourceDefinitionFilter {
    /**
     * Constructs a new <code>ResourceDefinitionFilter</code>.
     * @alias module:model/ResourceDefinitionFilter
     * @param key {String} 
     * @param operation {module:model/ResourceDefinitionFilter.OperationEnum} 
     * @param value {String} 
     */
    constructor(key, operation, value) { 
        
        ResourceDefinitionFilter.initialize(this, key, operation, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, key, operation, value) { 
        obj['key'] = key;
        obj['operation'] = operation;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>ResourceDefinitionFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceDefinitionFilter} obj Optional instance to populate.
     * @return {module:model/ResourceDefinitionFilter} The populated <code>ResourceDefinitionFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceDefinitionFilter();

            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('operation')) {
                obj['operation'] = ApiClient.convertToType(data['operation'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} key
 */
ResourceDefinitionFilter.prototype['key'] = undefined;

/**
 * @member {module:model/ResourceDefinitionFilter.OperationEnum} operation
 */
ResourceDefinitionFilter.prototype['operation'] = undefined;

/**
 * @member {String} value
 */
ResourceDefinitionFilter.prototype['value'] = undefined;





/**
 * Allowed values for the <code>operation</code> property.
 * @enum {String}
 * @readonly
 */
ResourceDefinitionFilter['OperationEnum'] = {

    /**
     * value: "equal"
     * @const
     */
    "equal": "equal"
};



export default ResourceDefinitionFilter;

