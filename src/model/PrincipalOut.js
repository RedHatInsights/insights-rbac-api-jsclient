/**
 * Role Based Access Control
 * The API for Role Based Access Control.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Principal from './Principal';
import UUID from './UUID';

/**
 * The PrincipalOut model module.
 * @module model/PrincipalOut
 * @version 1.0.0
 */
class PrincipalOut {
    /**
     * Constructs a new <code>PrincipalOut</code>.
     * @alias module:model/PrincipalOut
     * @extends module:model/Principal
     * @implements module:model/Principal
     * @implements module:model/UUID
     * @param username {} 
     * @param email {} 
     * @param uuid {} 
     */
    constructor(username, email, uuid) { 
        Principal.initialize(this, username, email);UUID.initialize(this, uuid);
        PrincipalOut.initialize(this, username, email, uuid);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, username, email, uuid) { 
    }

    /**
     * Constructs a <code>PrincipalOut</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PrincipalOut} obj Optional instance to populate.
     * @return {module:model/PrincipalOut} The populated <code>PrincipalOut</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PrincipalOut();
            Principal.constructFromObject(data, obj);
            Principal.constructFromObject(data, obj);
            UUID.constructFromObject(data, obj);

        }
        return obj;
    }


}


// Implement Principal interface:
/**
 * @member {String} username
 */
Principal.prototype['username'] = undefined;
/**
 * @member {String} email
 */
Principal.prototype['email'] = undefined;
/**
 * @member {String} first_name
 */
Principal.prototype['first_name'] = undefined;
/**
 * @member {String} last_name
 */
Principal.prototype['last_name'] = undefined;
/**
 * @member {Boolean} is_org_admin
 */
Principal.prototype['is_org_admin'] = undefined;
// Implement UUID interface:
/**
 * @member {String} uuid
 */
UUID.prototype['uuid'] = undefined;




export default PrincipalOut;

